import type { NextPage } from "next";
import Head from "next/head";
import TextInput from "../src/component/common/TextInput";
import { yupResolver } from "@hookform/resolvers/yup";
import { useForm } from "react-hook-form";
import { useRef } from "react";
import * as yup from "yup";

const Home: NextPage = () => {
  const formRef = useRef<HTMLFormElement>(null);
  const schema = yup.object().shape({
    text: yup.string().min(2, `2자 이상 입력해주세요`).max(10, "").required(),
  });

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm({
    resolver: yupResolver(schema),
    defaultValues: {
      text: "",
    },
  });

  const onSubmit = (formData: { text: any }) => {
    const { text } = formData;
    console.log("onSubmit", text);
  };

  const onClickSubmitButton = () => {
    formRef?.current?.dispatchEvent(
      new Event("submit", { cancelable: true, bubbles: true })
    );
  };

  return (
    <form ref={formRef} onSubmit={handleSubmit(onSubmit)}>
      <button onClick={onClickSubmitButton}>ddd</button>
      <TextInput
        register={{
          ...register("text", {
            required: true,
            minLength: 2,
            maxLength: 10,
            onChange: (e) => console.log(),
          }),
        }}
        errorMessage={errors?.text?.message}
      />
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    </form>
  );
};

export default Home;
